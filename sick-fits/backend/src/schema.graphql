# Public facing API that is hosted on Yoga server. We interface with it with JS

# below comment actually imports schema from file, only imports what is called (ex: Item)
# import * from './generated/prisma.graphql'

type SuccessMessage {
  message: String
}

# ANYTIME YOU ADD A MUTATION / QUERY TO SCHEMA, YOU HAVE TO CREATE THE CORRISPONDING RESOLVER (LOCATED IN ./RESOLVERS FOLDER)
type Mutation {
  createItem(
    title: String
    description: String
    price: Int
    image: String
    largeImage: String
  ): Item!
  # nothing required because you may not update
  updateItem(id: ID!, title: String, description: String, price: Int): Item!
  deleteItem(id: ID!): Item
  # run signup, takes in email, pw, name (all required), returns user (required)
  signup(email: String!, password: String!, name: String!): User!
  signin(email: String!, password: String!): User!
  signout: SuccessMessage
  requestReset(email: String!): SuccessMessage
  resetPassword(
    resetToken: String!
    password: String!
    confirmPassword: String!
  ): User!
  updatePermissions(permissions: [Permission], userId: ID!): User
  addToCart(id: ID!): CartItem
  removeFromCart(id: ID!): CartItem
}

type Query {
  items(
    where: ItemWhereInput
    orderBy: ItemOrderByInput
    skip: Int
    first: Int
  ): [Item]!
  item(where: ItemWhereUniqueInput!): Item
  itemsConnection(where: ItemWhereInput): ItemConnection!
  # used for login, not ! b/c it may not find a user to login
  me: User
  users: [User]! # require an array, but array can be empty
}

type User {
  id: ID!
  name: String!
  email: String!
  permissions: [Permission!]!
  cart: [CartItem!]!
}
